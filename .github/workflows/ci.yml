name: CI Pipeline

on:
  push:
    paths:
      - 'src/**'
      - 'migrations/**'
  workflow_dispatch:   # manual trigger

jobs:
  build-test-lint:
    runs-on: self-hosted
    env:
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file
        shell: cmd
        run: |
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo DB_USER=${{ secrets.DB_USER }} >> .env
          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
          echo DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }} >> .env
      
      # Still install dependencies on host (for linting tools etc.)
      - name: Install dependencies
        shell: cmd
        run: npm install

      - name: Build API (Docker)
        shell: cmd
        run: make compose-build-api
  
      - name: Run tests (inside Docker)
        shell: cmd
        run: make compose-test
  
      - name: Lint code (inside Docker)
        shell: cmd
        run: make compose-lint


  docker:
    runs-on: self-hosted
    needs: build-test-lint
    env:
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: make docker-build

      - name: Push Docker image
        run: make docker-push
